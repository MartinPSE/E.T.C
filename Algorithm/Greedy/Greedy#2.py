# Quiz #2 1이 될때까지

# 어떠한 수 N이 1이 될 때까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 한다.
# (단, 두번째 연산은 N이 K로 나누어 떨어질 때만 선택할 수 있다.)
# 1. N에서 1을 뺀다.
# 2. N을 K로 나눈다.

# EX) N이 17, K가 4라고 가정. 이때 1번의 과정을 한 번 수행하면 N은 16이 된다. 이후에 2번의 과정을 두번 수행하면
# N은 1이 된다. 결과적으로 전체 과정을 실행한 횟수는 3이 된다. 즉 N을 1로 만드는 최소 횟수는 3

# N과 K가 주어질 때 N이 1이 될 때까지 1번 혹은 2번 과정을 수행해야 하는 최소 횟수를 구해보자
"""
idea 1. target 을 설정할 발상
idea 2. 무조건 빼는 미련한 짓 보다 나누는게 최선.

"""

N = 17
K = 4
ans = 0

while True:
    # N 이 K 로 나누어 떨어지는 수가 될 때까지 빼자
    target = (N // K) * K
    ans += (N - target)
    N = target
    # N이 K보다 작을 때 (더 이상 나눌 수 없을 때) 반복문 탈출
    if N < K:
        break
    # K로 나누기
    ans += 1
    N //= K

# 마지막으로 남은 수에 대하여 1씩 빼기.
ans += (N - 1)
print(ans)
