# 그리디 알고리즘
# : 현재 상황에서 지금 당장 좋은 것만 고르는 방법
#  최소한의 아이디어를 떠올릴 수 있는 능력을 요구
#  정당성 분석이 가장 중요
#  --> 단순히 가장 좋아 보이는 것을 반복적으로 선택해도 최적의 해를 구할 수 있는지 검토.


# Quiz #1 <문제> 거스름 돈 :
# 당신은 음식점의 계산을 도와주는 점원입니다. 카운터에는 거스름돈으로 사용할 500원, 100원, 50원, 10원 짜리 동전이 무한히 존재
# 손님에게 거슬러 주어야 할 돈이 N원일 때 거슬러 주어야 할 동전의 최소 개수를 구하세요. 단, 거슬러 줘야 할 돈 N은 항상 10의 배수

"""
Idea !
1. 가장 큰 화폐 단위 부터 돈을 거슬러 주자
2. 그리고 그 후 차례로 --->
ex) N = 1260 원 이면
500 x 2 / 100 * 2 / 50 * 1 / 10 * 1

Why?
- 가지고 있는 동전 중에서 가장 큰 단위가 항상 작은 단위의 배수 이다.
- 고로 작은 단위를 아무리 가지고 놀아봤자 큰 단위를 이길 수가 없다.
- 즉, '그리디 알고리즘 문제' 에서는 문제 풀이를 위한 최소한의 아이디어를 떠올리고 이것이 정당한지 검토가 가능 해야한다.
"""
# 시간 복잡도는 O(K) -- 즉, 잔돈의 갯수만큼만 영향 

N = int(input())
count = 0

changes = [500, 100, 50, 10]

for coin in changes:
    count += N // coin  # 나눌때까지 나눈 뒤 count 더 해 주고
    N %= coin  # 나머지를 coin에 다시 넣어주자

print(count)

